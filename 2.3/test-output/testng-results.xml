<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" total="3" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="1648" started-at="2019-04-24T19:14:30Z" finished-at="2019-04-24T19:14:31Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="1648" started-at="2019-04-24T19:14:30Z" finished-at="2019-04-24T19:14:31Z">
      <class name="test.Extent">
        <test-method status="PASS" signature="startTest()[pri:0, instance:test.Extent@62ee68d8]" name="startTest" is-config="true" duration-ms="863" started-at="2019-04-25T00:44:30Z" finished-at="2019-04-25T00:44:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="FAIL" signature="call()[pri:0, instance:test.Extent@62ee68d8]" name="call" duration-ms="45" started-at="2019-04-25T00:44:31Z" finished-at="2019-04-25T00:44:31Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [a] but found [an]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [a] but found [an]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:190)
	at org.testng.Assert.assertEquals(Assert.java:200)
	at test.aLOK.test1(aLOK.java:19)
	at test.Extent.call(Extent.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- call -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:test.Extent@62ee68d8]" name="getResult" is-config="true" duration-ms="42" started-at="2019-04-25T00:44:31Z" finished-at="2019-04-25T00:44:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=call status=FAILURE method=Extent.call()[pri:0, instance:test.Extent@62ee68d8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="FAIL" signature="test123()[pri:0, instance:test.Extent@62ee68d8]" name="test123" duration-ms="3" started-at="2019-04-25T00:44:31Z" finished-at="2019-04-25T00:44:31Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at test.Extent.test123(Extent.java:42)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:100)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:646)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:811)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1137)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:753)
	at org.testng.TestRunner.run(TestRunner.java:607)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:368)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:363)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:321)
	at org.testng.SuiteRunner.run(SuiteRunner.java:270)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1284)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1209)
	at org.testng.TestNG.runSuites(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1096)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:236)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:81)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test123 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:test.Extent@62ee68d8]" name="getResult" is-config="true" duration-ms="7" started-at="2019-04-25T00:44:31Z" finished-at="2019-04-25T00:44:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test123 status=FAILURE method=Extent.test123()[pri:0, instance:test.Extent@62ee68d8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="test1234()[pri:0, instance:test.Extent@62ee68d8]" name="test1234" duration-ms="4" started-at="2019-04-25T00:44:31Z" finished-at="2019-04-25T00:44:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1234 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:test.Extent@62ee68d8]" name="getResult" is-config="true" duration-ms="1" started-at="2019-04-25T00:44:31Z" finished-at="2019-04-25T00:44:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test1234 status=SUCCESS method=Extent.test1234()[pri:0, instance:test.Extent@62ee68d8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="endTest()[pri:0, instance:test.Extent@62ee68d8]" name="endTest" is-config="true" duration-ms="598" started-at="2019-04-25T00:44:31Z" finished-at="2019-04-25T00:44:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
      </class> <!-- test.Extent -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
