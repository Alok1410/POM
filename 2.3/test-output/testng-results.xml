<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" total="3" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="418" started-at="2019-04-24T14:14:04Z" finished-at="2019-04-24T14:14:04Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="418" started-at="2019-04-24T14:14:04Z" finished-at="2019-04-24T14:14:04Z">
      <class name="test.Extent">
        <test-method status="PASS" signature="startTest()[pri:0, instance:test.Extent@735b5592]" name="startTest" is-config="true" duration-ms="156" started-at="2019-04-24T19:44:04Z" finished-at="2019-04-24T19:44:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method status="FAIL" signature="call()[pri:0, instance:test.Extent@735b5592]" name="call" duration-ms="9" started-at="2019-04-24T19:44:04Z" finished-at="2019-04-24T19:44:04Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [a] but found [an]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [a] but found [an]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertEquals(Assert.java:125)
	at org.testng.Assert.assertEquals(Assert.java:178)
	at org.testng.Assert.assertEquals(Assert.java:188)
	at test.aLOK.test1(aLOK.java:19)
	at test.Extent.call(Extent.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- call -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:test.Extent@735b5592]" name="getResult" is-config="true" duration-ms="1" started-at="2019-04-24T19:44:04Z" finished-at="2019-04-24T19:44:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=call status=FAILURE method=Extent.call()[pri:0, instance:test.Extent@735b5592] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="FAIL" signature="test123()[pri:0, instance:test.Extent@735b5592]" name="test123" duration-ms="1" started-at="2019-04-24T19:44:04Z" finished-at="2019-04-24T19:44:04Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at test.Extent.test123(Extent.java:34)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test123 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:test.Extent@735b5592]" name="getResult" is-config="true" duration-ms="0" started-at="2019-04-24T19:44:04Z" finished-at="2019-04-24T19:44:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test123 status=FAILURE method=Extent.test123()[pri:0, instance:test.Extent@735b5592] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="test1234()[pri:0, instance:test.Extent@735b5592]" name="test1234" duration-ms="1" started-at="2019-04-24T19:44:04Z" finished-at="2019-04-24T19:44:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1234 -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:test.Extent@735b5592]" name="getResult" is-config="true" duration-ms="0" started-at="2019-04-24T19:44:04Z" finished-at="2019-04-24T19:44:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test1234 status=SUCCESS method=Extent.test1234()[pri:0, instance:test.Extent@735b5592] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="endTest()[pri:0, instance:test.Extent@735b5592]" name="endTest" is-config="true" duration-ms="231" started-at="2019-04-24T19:44:04Z" finished-at="2019-04-24T19:44:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
      </class> <!-- test.Extent -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
